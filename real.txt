<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Currency Converter</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
            background-color: #f4f4f4;
            transition: background 0.3s ease;
        }
        .container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 2px 2px 12px rgba(0, 0, 0, 0.2);
        }
        select, input, button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            font-size: 16px;
        }
        button {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .dark-mode {
            background-color: #333;
            color: white;
        }
        .dark-mode .container {
            background-color: #444;
        }
    </style>
</head>
<body>
    <h2>Advanced Currency Converter</h2>
    <button onclick="toggleDarkMode()">Toggle Dark Mode</button>
    <div class="container">
        <input type="number" id="amount" placeholder="Enter amount" value="1">
        <select id="fromCurrency"></select>
        <select id="toCurrency"></select>
        <button onclick="convertCurrency()">Convert</button>
        <h3 id="result"></h3>
    </div>
    <canvas id="chart" width="400" height="200"></canvas>
    
    <script>
        const apiUrl = `https://api.exchangerate-api.com/v4/latest/USD`;
        async function loadCurrencies() {
            const response = await fetch(apiUrl);
            const data = await response.json();
            const currencies = Object.keys(data.rates);
            const fromSelect = document.getElementById("fromCurrency");
            const toSelect = document.getElementById("toCurrency");
            currencies.forEach(currency => {
                fromSelect.innerHTML += `<option value="${currency}">${currency}</option>`;
                toSelect.innerHTML += `<option value="${currency}">${currency}</option>`;
            });
            fromSelect.value = "USD";
            toSelect.value = "INR";
        }
        
        async function convertCurrency() {
            const amount = document.getElementById("amount").value;
            const fromCurrency = document.getElementById("fromCurrency").value;
            const toCurrency = document.getElementById("toCurrency").value;
            const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);
            const data = await response.json();
            const rate = data.rates[toCurrency];
            const result = (amount * rate).toFixed(2);
            document.getElementById("result").innerText = `${amount} ${fromCurrency} = ${result} ${toCurrency}`;
            updateChart(fromCurrency, toCurrency);
        }
        
        async function updateChart(fromCurrency, toCurrency) {
            const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);
            const data = await response.json();
            const rate = data.rates[toCurrency];
            const labels = Array.from({ length: 10 }, (_, i) => `Day ${i + 1}`);
            const values = Array.from({ length: 10 }, () => (rate * (1 + (Math.random() - 0.5) / 10)).toFixed(2));
            
            new Chart(document.getElementById("chart"), {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: `Exchange Rate ${fromCurrency} to ${toCurrency}`,
                        data: values,
                        borderColor: 'blue',
                        fill: false
                    }]
                }
            });
        }
        
        function toggleDarkMode() {
            document.body.classList.toggle("dark-mode");
        }
        
        window.onload = loadCurrencies;
    </script>
</body>
</html>
